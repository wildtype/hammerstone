title: Membuat Diagram dengan Kroki, Vim, dan Browser
slug: diagram
created_at: 2022-11-12T19:05:00+07:00
--- |-
<<<
<figure style="max-width: 600px"><img src="https://storage.googleapis.com/static.prehistoric.me/pictures/diagram-2354.png"><figcaption><p><em>Sequence Diagram</em></p></figcaption></figure>
>>>
Kadang saya perlu membuat diagram seperti flowchart atau [[https://en.wikipedia.org/wiki/Sequence_diagram|sequence diagram]]. Dalam membuatnya saya terbiasa menggunakan sintaks [[https://plantuml.com|PlantUML]]. Ada beberapa perangkat yang bisa dipakai untuk menulis kode diagram dan melihat tampilan digramnya secara instan, misal dengan menggunakan website plantuml.com atau dengan fasitilitas edit code dari draw.io. Buat saya, semua perangkat tersebut memiliki kelemahan yang sama, yaitu editornya bukan vi(m). Singkatnya, yang saya inginkan adalah mengetikan sintaks diagram dari editor vim (atau editor apapun yang punya keymap seperti vim), dan bisa melihat hasilnya secara (hampir) realtime.

Setelah bereksperimen beberapa kali, saya pun membuat //work-flow// yang sampai sekarang paling mudah dan praktis untuk menulis diagram.
--- |-
Kadang saya perlu membuat diagram seperti flowchart atau [[https://en.wikipedia.org/wiki/Sequence_diagram|sequence diagram]]. Dalam membuatnya saya terbiasa menggunakan sintaks [[https://plantuml.com|PlantUML]].  Ada beberapa perangkat yang bisa dipakai untuk menulis kode diagram dan melihat tampilan digramnya secara instan, misal dengan menggunakan website plantuml.com atau dengan fasitilitas edit code dari draw.io. Semua perangkat tersebut memiliki kelemahan yang sama, yaitu editornya bukan vi(m). Singkatnya, yang diinginkan adalah cara untuk mengetik sintaks diagram dari editor vim (atau editor apapun yang punya keymap seperti vim), dan bisa melihat hasilnya secara (hampir) realtime.

Setelah bereksperimen beberapa kali, saya pun membuat //workflow// yang sampai sekarang paling mudah dan praktis untuk menulis diagram. Proses konversi menjadi gambar diagram dilakukan dengan [[https://kroki.io|kroki]]. Kroki dipilih karena mendukung berbagai macam sintaks dan jenis diagram, dan tersedia dalam bentuk file //jar// yang bisa dijalankan langsung dengan java. Kemudian saya membuat file template HTML yang berisi tempat kita menuliskan sintaks diagram dan perintah JS untuk mengonversi sintaks tersebut menjadi gambar diagram melalui HTTP call ke kroki. Isi file template tersebut seperti ini.

<<<
<pre class="chs"><span class="Identifier">&lt;</span><span class="Statement">html</span><span class="Identifier">&gt;</span>
  <span class="Identifier">&lt;</span><span class="Statement">script</span><span class="Identifier"> </span><span class="Type">type</span><span class="Identifier">=</span><span class="Constant">"text/plain"</span><span class="Identifier"> </span><span class="Type">id</span><span class="Identifier">=</span><span class="Constant">"source"</span><span class="Identifier">&gt;</span>
@startuml
actor Saya as s
participant Disk as d
participant Browser as b
participant Kroki.jar as k

s <span class="Statement">-&gt;</span> <span class="Identifier">k</span>: Jalankan <span class="Constant">""</span>kroki.jar<span class="Constant">""</span> di shell
s <span class="Statement">-&gt;</span> <span class="Identifier">s</span>: Buka file <span class="Comment">//diagram.html// di editor</span>
s <span class="Statement">-&gt;</span> <span class="Identifier">s</span>: Ketik sintaks diagram di editor
s <span class="Statement">-&gt;</span> <span class="Identifier">d</span>: Save file
s <span class="Statement">-&gt;</span> <span class="Identifier">b</span>: Buka file <span class="Comment">//diagram.html// di browser</span>
loop refresh setiap <span class="Constant">5</span> detik
  b <span class="Statement">-&gt;</span> <span class="Identifier">d</span>: Muat isi file terkini
  d <span class="Comment">--&gt;</span> <span class="Identifier">b</span>: Isi file terkini
  b <span class="Statement">-&gt;</span> <span class="Identifier">k</span>: Kirimkan sintaks diagram
  k <span class="Comment">--&gt;</span> <span class="Identifier">b</span>: Respon dengan gambar diagram
  b <span class="Statement">-&gt;</span> <span class="Identifier">s</span>: Tampilkan gambar diagram
end
@enduml
<span class="Identifier">&lt;/</span><span class="Statement">script</span><span class="Identifier">&gt;</span>

  <span class="Identifier">&lt;</span><span class="Statement">body</span><span class="Identifier">&gt;</span>
    <span class="Identifier">&lt;</span><span class="Statement">form</span><span class="Identifier"> </span><span class="Type">autocomplete</span><span class="Identifier">=</span><span class="Constant">"on"</span><span class="Identifier">&gt;</span>
      <span class="Identifier">&lt;</span><span class="Statement">fieldset</span><span class="Identifier">&gt;</span>
        <span class="Identifier">&lt;</span><span class="Statement">legend</span><span class="Identifier">&gt;</span>Configs<span class="Identifier">&lt;/</span><span class="Statement">legend</span><span class="Identifier">&gt;</span>
        <span class="Identifier">&lt;</span><span class="Statement">input</span><span class="Identifier"> </span><span class="Type">type</span><span class="Identifier">=</span><span class="Constant">"checkbox"</span><span class="Identifier"> </span><span class="Type">name</span><span class="Identifier">=</span><span class="Constant">"autoreload"</span><span class="Identifier"> </span><span class="Type">id</span><span class="Identifier">=</span><span class="Constant">"cbAutoReload"</span><span class="Identifier"> </span><span class="Type">checked</span><span class="Identifier">/&gt;&lt;</span><span class="Statement">label</span><span class="Identifier"> </span><span class="Type">for</span><span class="Identifier">=</span><span class="Constant">"cbAutoReload"</span><span class="Identifier">&gt;</span>Autoreload<span class="Identifier">&lt;/</span><span class="Statement">label</span><span class="Identifier">&gt;</span>
        <span class="Identifier">&lt;</span><span class="Statement">input</span><span class="Identifier"> </span><span class="Type">type</span><span class="Identifier">=</span><span class="Constant">"radio"</span><span class="Identifier"> </span><span class="Type">name</span><span class="Identifier">=</span><span class="Constant">"format"</span><span class="Identifier"> </span><span class="Type">value</span><span class="Identifier">=</span><span class="Constant">"png"</span><span class="Identifier"> </span><span class="Type">id</span><span class="Identifier">=</span><span class="Constant">"rdPng"</span><span class="Identifier">/&gt;&lt;</span><span class="Statement">label</span><span class="Identifier"> </span><span class="Type">for</span><span class="Identifier">=</span><span class="Constant">"rdPng"</span><span class="Identifier">&gt;</span>png<span class="Identifier">&lt;/</span><span class="Statement">label</span><span class="Identifier">&gt;</span>
        <span class="Identifier">&lt;</span><span class="Statement">input</span><span class="Identifier"> </span><span class="Type">type</span><span class="Identifier">=</span><span class="Constant">"radio"</span><span class="Identifier"> </span><span class="Type">name</span><span class="Identifier">=</span><span class="Constant">"format"</span><span class="Identifier"> </span><span class="Type">value</span><span class="Identifier">=</span><span class="Constant">"svg"</span><span class="Identifier"> </span><span class="Type">id</span><span class="Identifier">=</span><span class="Constant">"rdSvg"</span><span class="Identifier"> </span><span class="Type">checked</span><span class="Identifier">/&gt;&lt;</span><span class="Statement">label</span><span class="Identifier"> </span><span class="Type">for</span><span class="Identifier">=</span><span class="Constant">"rdSvg"</span><span class="Identifier">&gt;</span>svg<span class="Identifier">&lt;/</span><span class="Statement">label</span><span class="Identifier">&gt;</span>
      <span class="Identifier">&lt;/</span><span class="Statement">fieldset</span><span class="Identifier">&gt;</span>
    <span class="Identifier">&lt;/</span><span class="Statement">form</span><span class="Identifier">&gt;</span>
    <span class="Identifier">&lt;</span><span class="Statement">div</span><span class="Identifier"> </span><span class="Type">id</span><span class="Identifier">=</span><span class="Constant">"result"</span><span class="Identifier">&gt;</span><span class="Identifier">&lt;/</span><span class="Statement">div</span><span class="Identifier">&gt;</span>
    <span class="Identifier">&lt;</span><span class="Statement">script</span><span class="Identifier">&gt;</span>
      <span class="Type">const</span> resultContainer <span class="Statement">=</span> <span class="Constant">document</span>.<span class="Identifier">getElementById</span>(<span class="Constant">'result'</span>);
      <span class="Type">const</span> cbAutoReload <span class="Statement">=</span> <span class="Constant">document</span>.<span class="Identifier">getElementById</span>(<span class="Constant">'cbAutoReload'</span>);
      <span class="Type">const</span> rdSvg <span class="Statement">=</span> <span class="Constant">document</span>.<span class="Identifier">getElementById</span>(<span class="Constant">'rdSvg'</span>);

      <span class="Type">function</span> <span class="Identifier">png</span>() {
        <span class="Type">const</span> source <span class="Statement">=</span> <span class="Constant">document</span>.<span class="Identifier">querySelector</span>(<span class="Constant">'#source'</span>).innerHTML;

        <span class="Constant">fetch</span>(<span class="Constant">'<a href="http://localhost:8000/plantuml/png">http://localhost:8000/plantuml/png</a>'</span>, { method: <span class="Constant">'POST'</span>, body: source })
          .<span class="Identifier">then</span>(response <span class="Type">=&gt;</span> response.<span class="Identifier">blob</span>())
          .<span class="Identifier">then</span>(imageBlob <span class="Type">=&gt;</span> {
            <span class="Type">const</span> imageUrl <span class="Statement">=</span> URL.<span class="Identifier">createObjectURL</span>(imageBlob);
            resultContainer.innerHTML <span class="Statement">=</span> <span class="Constant">`&lt;img src="</span>${imageUrl}<span class="Constant">" /&gt;`</span>;
          });
      }

      <span class="Type">function</span> <span class="Identifier">svg</span>() {
        <span class="Type">const</span> source <span class="Statement">=</span> <span class="Constant">document</span>.<span class="Identifier">querySelector</span>(<span class="Constant">'#source'</span>).innerHTML;

        <span class="Constant">fetch</span>(<span class="Constant">'<a href="http://localhost:8000/plantuml/svg">http://localhost:8000/plantuml/svg</a>'</span>, { method: <span class="Constant">'POST'</span>, body: source })
          .<span class="Identifier">then</span>(response <span class="Type">=&gt;</span> response.<span class="Identifier">text</span>())
          .<span class="Identifier">then</span>(bodyText <span class="Type">=&gt;</span> { resultContainer.innerHTML <span class="Statement">=</span> bodyText; });
      }


      <span class="Type">function</span> <span class="Identifier">storeFormat</span>() {
          <span class="Statement">if</span> (rdSvg.checked) {
            localStorage.<span class="Identifier">setItem</span>(<span class="Constant">'isSvg'</span>, <span class="Constant">'true'</span>);
          } <span class="Statement">else</span> {
            localStorage.<span class="Identifier">setItem</span>(<span class="Constant">'isSvg'</span>, <span class="Constant">'false'</span>);
          }
      }

      <span class="Type">function</span> <span class="Identifier">loadFormat</span>() {
        <span class="Type">const</span> formatIsSvg <span class="Statement">=</span> localStorage.<span class="Identifier">getItem</span>(<span class="Constant">'isSvg'</span>);

        <span class="Statement">if</span> (formatIsSvg <span class="Statement">===</span> <span class="Constant">'true'</span>) {
          rdSvg.checked <span class="Statement">=</span> <span class="Constant">true</span>;
        } <span class="Statement">else</span> {
          rdPng.checked <span class="Statement">=</span> <span class="Constant">true</span>;
        }
      }

      <span class="Type">function</span> <span class="Identifier">loadImage</span>() {
        <span class="Identifier">loadFormat</span>();

        <span class="Statement">if</span> (rdSvg.checked) {
          <span class="Identifier">svg</span>();
        } <span class="Statement">else</span> {
          <span class="Identifier">png</span>();
        }
      }

      <span class="Identifier">loadImage</span>();
      <span class="Identifier">setInterval</span>(<span class="Type">()</span> <span class="Type">=&gt;</span> {
        <span class="Statement">if</span> (cbAutoReload.checked) {
          <span class="Identifier">storeFormat</span>();
          <span class="Constant">window</span>.location.<span class="Identifier">reload</span>();
        }
      }, <span class="Constant">5000</span>);
    <span class="Identifier">&lt;/</span><span class="Statement">script</span><span class="Identifier">&gt;</span>
  <span class="Identifier">&lt;/</span><span class="Statement">body</span><span class="Identifier">&gt;</span>
<span class="Identifier">&lt;/</span><span class="Statement">html</span><span class="Identifier">&gt;</span>
</pre>
>>>

Bisa dilihat kode diagram ditulis di antara block {{{<script type="text/plain" id="source"></script>}}}. Isi block script tersebut itu dikirimkan ke server lokal kroki dengan method {{{fetch()}}} via HTTP. Ada checkbox dan radio button untuk mengatur format yang diinginkan dan apakah tampilan perlu diperbarui secara berkala.

Berkas template tersebut disimpan di folder {{{$HOME/Templates}}}. Setiap kali akan membuat diagram baru, saya menggunakan menu "Create Document > diagram" di program file manager (thunar), atau dengan {{{cp}}} jika melakukannya via terminal. Gambaran prosesnya kira-kira seperti ini:

<<<
<figure style="max-width: 600px"><img src="https://storage.googleapis.com/static.prehistoric.me/pictures/diagram-2354.png"><figcaption><p><em>Sequence Diagram</em> cara kerja dibuatnya diagram ini.</p></figcaption></figure>
>>>

Pembaruan tampilan dilakukan secara berkala tiap 5 detik dengan melakukan reload halaman secara penuh. Ini dilakukan supaya perubahan terkini pada isi block script bisa dimuat ulang untuk kemudian dikirimkan ke server kroki. Jika ingin mengubah format sintaks yang digunakan dan jenis diagram yang dihasilkan, bisa dilakukan dengan mengubah path yang dipanggil oleh method {{{fetch()}}}. Daftar lengkapnya bisa dicek di halaman web [[https://kroki.io/#support|kroki]].
